schema {
  query: Query
  mutation: MutationRoot
}

type Advert {
  additionalPhotos: [String!]!
  available: Boolean!
  category: String!
  createdAt: NaiveDateTime!
  description: String!
  id: Int!
  isFavorited: Boolean!
  location: String!
  oldPrice: Float!
  photoUrl: String!
  price: Float!
  soldTo: Int!
  specs: [specifications!]!
  title: String!
  updatedAt: NaiveDateTime!
  userId: Int!
}

type AdvertWithUser {
  advert: Advert!
  belongsToUser: Boolean!
  isAdmin: Boolean!
  user: User!
}

"""A scalar that can represent any JSON value."""
scalar JSON

type LoginResponse {
  accessToken: String!
  refreshToken: String!
}

type MutationRoot {
  addFavorite(accessToken: String!, advertId: Int!): favorites!
  createAdvert(accessToken: String!, category: String!, data: JSON!, description: String!, location: String!, photos: [String!]!, price: Float!, title: String!): Advert!
  deleteAdvert(accessToken: String!, advertId: Int!): Advert!
  edit(accessToken: String!, avatarUrl: String!, name: String!, password: String!, phone: String!, surname: String!): User!
  editAdvert(accessToken: String!, description: String!, id: Int!, location: String!, photos: [String!]!, price: Float!, title: String!): Advert!
  login(email: String!, password: String!): LoginResponse!
  refresh(refreshToken: String!): LoginResponse!
  register(email: String!, image: String!, name: String!, password: String!, phone: String!, surname: String!): User!
  removeFavorite(accessToken: String!, advertId: Int!): favorites!
}

"""
ISO 8601 combined date and time without timezone.

# Examples

* `2015-07-01T08:59:60.123`,
"""
scalar NaiveDateTime

type Query {
  getAdvert(accessToken: String!, id: Int!): AdvertWithUser!
  getAdverts(accessToken: String!, limit: Int!, offset: Int!): [Advert!]!
  getAdvertsByCategory(category: String!): [Advert!]!
  getFavorites(accessToken: String!): [Advert!]!
  me(accessToken: String!): User!
  stats: Statistics!
  user(id: Int!): User!
}

type Statistics {
  advertCount: Int!
  todayAdvertCount: Int!
  todayUserCount: Int!
  userCount: Int!
}

type User {
  adverts: [Advert!]!
  avatarUrl: String!
  balance: Float!
  createdAt: NaiveDateTime!
  email: String!
  id: Int!
  isAdmin: Boolean!
  name: String!
  phone: String!
  surname: String!
  updatedAt: NaiveDateTime!
}

type favorites {
  advertId: Int!
  createdAt: NaiveDateTime!
  id: Int!
  string: String!
  userId: Int!
}

type specifications {
  advertId: Int!
  id: Int!
  key: String!
  value: String!
}

type Advert {
  additionalPhotos: [String!]
  available: Boolean!
  category: String!
  createdAt: NaiveDateTime!
  description: String!
  id: Int!
  isFavorited: Boolean!
  lat: Float!
  lon: Float!
  oldPrice: Float!
  photoUrl: String!
  price: Float!
  review: reviews
  soldTo: Int
  specs: [specifications!]!
  title: String!
  updatedAt: NaiveDateTime!
  user: User!
  userId: Int!
}

"""A scalar that can represent any JSON value."""
scalar JSON

type LoginResponse {
  accessToken: String!
  refreshToken: String!
  userId: Int!
}

type Mutation {
  addFavorite(advertId: Int!): favorites!
  banUser(userId: Int!): User!
  createAdvert(category: String!, data: JSON!, description: String!, lat: Float!, lon: Float!, photos: [String!]!, price: Float!, title: String!): Advert!
  deleteAdvert(advertId: Int!): Advert!
  edit(avatarUrl: String, companyName: String, name: String, password: String!, phone: String, surname: String): User!
  editAdvert(description: String!, id: Int!, lat: Float!, lon: Float!, photos: [String!]!, price: Float!, title: String!): Advert!
  forgotPassword(email: String!): String!
  login(email: String!, password: String!): LoginResponse!
  refresh(refreshToken: String!): LoginResponse!
  register(companyName: String, email: String!, name: String, password: String!, surname: String): User!
  removeFavorite(advertId: Int!): favorites!
  resendEmail: String!
  resetPassword(newPassword: String!, token: String!): String!
  verifyEmail(token: String!): String!
  writeReview(advertId: Int!, message: String!, rating: Int!): reviews!
}

"""
ISO 8601 combined date and time without timezone.

# Examples

* `2015-07-01T08:59:60.123`,
"""
scalar NaiveDateTime

type Query {
  advert(id: Int!): Advert!
  getAdverts(limit: Int!, offset: Int!): [Advert!]!
  getFavorites: [Advert!]!
  me: User!
  searchAdverts(category: String, centerLat: Float, centerLon: Float, customFields: JSON, locationRange: Float, maxPrice: Float, minPrice: Float, minRating: Float, offset: Int!, sortField: String, sortOrder: String, title: String!): [Advert!]!
  similarAdverts(id: Int!): [Advert!]!
  stats: Statistics!
  user(id: Int!): User!
  validateResetToken(token: String!): Boolean!
}

enum Role {
  ADMIN
  MODERATOR
  USER
}

type Statistics {
  advertCount: Int!
  todayAdvertCount: Int!
  todayUserCount: Int!
  userCount: Int!
}

type User {
  adverts: [Advert!]!
  advertsWithReviews: [Advert!]!
  avatarUrl: String
  banned: Boolean!
  companyName: String
  createdAt: NaiveDateTime!
  email: String
  emailVerified: Boolean!
  id: Int!
  name: String
  phone: String
  rating: Float!
  reviewedAdverts: [Advert!]!
  role: Role!
  surname: String
  updatedAt: NaiveDateTime!
}

type favorites {
  advertId: Int!
  createdAt: NaiveDateTime!
  id: Int!
  userId: Int!
}

type reviews {
  advertId: Int!
  createdAt: NaiveDateTime!
  id: Int!
  message: String!
  rating: Int!
  user: User!
  userId: Int!
}

type specifications {
  advertId: Int!
  id: Int!
  key: String!
  value: String!
}
